

#ifndef THZ_HELPER_H_
#define THZ_HELPER_H_

#include <string>
#include "ns3/attribute.h"
#include "ns3/object-factory.h"
#include "ns3/node-container.h"
#include "ns3/net-device-container.h"
#include "ns3/thz-net-device.h"
#include "ns3/trace-helper.h"

namespace ns3
{
class THzMac;
class THzPhyNano;
class THzChannel;

//class NetDevice;
//class Node;

class THzMacHelper
{
public:
  virtual ~THzMacHelper ();
  virtual Ptr<THzMac> Create (void) const = 0;
};

class THzPhyHelper
{
public:
  virtual ~THzPhyHelper ();
  virtual Ptr<THzPhy> Create (void) const = 0;
};

class THzHelper //: public PcapHelperForDevice
{
public:
  THzHelper();
  virtual ~THzHelper();
  NetDeviceContainer Install (NodeContainer c, Ptr<THzChannel> channel, const THzPhyHelper &phyHelper, const THzMacHelper &macHelper) const;
  
private:
  //virtual void EnablePcapInternal (std::string prefix, Ptr<NetDevice> nd, bool promiscuous, bool explicitFilename);
  ObjectFactory m_mac;
  ObjectFactory m_phy;
};


} //end namespace ns3

#endif /* THZ_HELPER_H_ */
