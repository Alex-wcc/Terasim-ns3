#ifndef THZ_PHY_NANO_HELPER_H
#define THZ_PHY_NANO_HELPER_H

#include <string>
#include "thz-helper.h"

namespace ns3 {

class THzPhyNanoHelper : public THzPhyHelper
{
public:
  THzPhyNanoHelper ();

  virtual ~THzPhyNanoHelper ();
  //static THzPhyNanoHelper Default (void);
  void SetType (std::string type,
                std::string n0 = "", const AttributeValue &v0 = EmptyAttributeValue (),
                std::string n1 = "", const AttributeValue &v1 = EmptyAttributeValue (),
                std::string n2 = "", const AttributeValue &v2 = EmptyAttributeValue (),
                std::string n3 = "", const AttributeValue &v3 = EmptyAttributeValue (),
                std::string n4 = "", const AttributeValue &v4 = EmptyAttributeValue (),
                std::string n5 = "", const AttributeValue &v5 = EmptyAttributeValue (),
                std::string n6 = "", const AttributeValue &v6 = EmptyAttributeValue (),
                std::string n7 = "", const AttributeValue &v7 = EmptyAttributeValue ());
  
  void SetPhyAttribute (std::string n = "", const AttributeValue &v = EmptyAttributeValue ());
  
private:
  virtual Ptr<THzPhy> Create (void) const;

  ObjectFactory m_phy;
};

} //namespace ns3

#endif /* THZ_PHY_NANO_HELPER_H */
