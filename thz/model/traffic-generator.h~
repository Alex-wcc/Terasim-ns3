#ifndef TRAFFIC_GENERATOR_H
#define TRAFFIC_GENERATOR_H

#include "ns3/application.h"
#include "ns3/event-id.h"
#include "ns3/ptr.h"
#include "ns3/ipv4-address.h"
#include "ns3/traced-callback.h"
#include "ns3/node-container.h"
#include "ns3/nstime.h"
#include "ns3/node.h"
//#include "thz-energy-model.h"
namespace ns3 {

class Socket;
class Packet;
class THzEnergyModel;
//class NodeContainer;

class TrafficGenerator : public Application
{
public:
  TrafficGenerator ();
  virtual ~TrafficGenerator ();
  static TypeId GetTypeId (void);
  void AddNodeContainer(NodeContainer c);
  //void SetDelay (Time delay);
  //void SetSize (RandomVariable size);
  //void SetRemote (std::string socketType, Address remote);
protected:
  virtual void DoDispose (void);
private:
  virtual void StartApplication (void);
  virtual void StopApplication (void);
  void DoGenerate (void);
  void HandleRead (Ptr<Socket> socket);

  Time m_delay;
  double m_mean;
  uint32_t m_size;
  NodeContainer m_nodes;
  Ptr<Socket> m_socket;
  EventId m_sendEvent; 

};

}//namespace ns3
#endif
