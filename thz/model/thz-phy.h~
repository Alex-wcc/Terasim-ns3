#ifndef THZ_PHY_H
#define THZ_PHY_H

#include "ns3/simulator.h"
#include "ns3/event-id.h"
#include "thz-mac.h"
#include "thz-phy.h"
#include "thz-dir-antenna.h"
#include "ns3/traced-value.h"
#include "ns3/mobility-model.h"
#include "ns3/thz-spectrum-waveform.h"
#include "thz-net-device.h"
#include <list>

namespace ns3 {

class THzPhy : public Object
{
public:
  virtual void Clear () = 0;
  virtual void CalTxPsd() = 0;
  virtual void SetDevice (Ptr<THzNetDevice> device) = 0;
  //virtual Ptr<THzNetDevice> GetDevice () = 0;
  virtual void SetMac (Ptr<THzMac> mac) = 0;
  virtual void SetChannel (Ptr<THzChannel> channel) = 0;
  virtual void SetDirAntenna (Ptr<THzDirectionalAntenna> dirantenna) = 0;
  virtual void SetTxPower (double dBm) = 0;
  
  virtual Ptr<THzChannel> GetChannel () = 0;
  virtual Mac48Address GetAddress () = 0;
  //virtual double GetRxPowerTh () = 0;
  virtual double GetTxPower () = 0;
  virtual bool SendPacket (Ptr<Packet> packet, bool rate) = 0;
  virtual void SendPacketDone (Ptr<Packet> packet) = 0;
  virtual void ReceivePacket (Ptr<Packet> packet, Time txDuration, double_t rxPower) = 0;
  virtual void ReceivePacketDone (Ptr<Packet> packet, double rxPower) = 0;
  
  virtual bool IsIdle () = 0;
  virtual Time CalTxDuration (uint32_t basicSize, uint32_t dataSize, double basicRate, double dataRate) = 0;
   

};

} // namespace ns3

#endif // THZ_PHY_H
